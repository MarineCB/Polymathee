# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: postgres:latest


variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  POSTGRES_HOST_AUTH_METHOD: trust

services:
  - postgres


stages:
  - postgres
  - sonarcloud
  - heroku
  - test

# This folder is cached between builds
# http://docs.gitlab.com/ee/ci/yaml/README.html#cache
cache:
  untracked: true
  key: "$CI_BUILD_REF_NAME"
  paths:
    - node_modules/




postgres:
  stage: postgres
  allow_failure: false
  artifacts:
    when: always
    paths:
      - ./frontend/coverage/lcov.info
    expire_in: 1 week
  script:
    - if [ -z "$HEROKU_GIT" ]; then echo "Env variable not set HEROKU_GIT"; exit 1 ; fi
    - if [ -z "$HEROKU_API_KEY" ]; then echo "Env variable not set HEROKU_API_KEY"; exit 1 ; fi
    - echo "Execute this script in all jobs that don't already have a before_script section."
    - apt -y update 
    - apt-get install -y build-essential
    - apt install -y curl
    - echo 'Installing nodejs & npm now'
    - curl -sL https://deb.nodesource.com/setup_14.x  | bash -
    - apt-get install -y nodejs
    - npm --version
    - node --version
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -V
    - echo 'Trying to create the database ${POSTGRES_HOST}'
    - echo 'Trying to connect to the database $POSTGRES_HOST $POSTGRES_USER $POSTGRES_DB'
   # - psql -h "$POSTGRES_HOST" -U "$POSTGRES_USER" -d "postgres" -c "CREATE DATABASE $POSTGRES_DB;"
   # - psql -h "$POSTGRES_HOST" -U "$POSTGRES_USER" -d "postgres" -c "SELECT datname FROM pg_database WHERE datistemplate = false;"
    #- psql -h "$POSTGRES_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
    - echo 'Running tests & creating coverage report'
    - cd frontend
    - npm install
    #- npm i -g nyc
    #- npm run db && ./node_modules/.bin/nyc --reporter=html --reporter=text --require babel-core/register .node_modules/.bin/mocha --recursive ./server/test/integration/endpoints/ --exit
    - npm run build
    #- npm run coverage #JEST NOT SET UP YET
    


sonarcloud:
  stage: sonarcloud
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - echo 'Displaying current folder structure before start'
    - ls -a
    - sonar-scanner

.heroku:
  stage: heroku
  image:
    name: alpine/git:latest
    entrypoint: [""]
  script:
    - echo 'Pushing to Heroku!'
    - git config --global user.email "francoisgillioen@live.fr"
    - git config --global user.name "fran√ßois"
    # - git remote add heroku $HEROKU_GIT
    - git add .
    - git commit --allow-empty -m "Heroku commit from Gitlab CI/CD"
   # - git remote rm heroku
    - git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/polymathee.git
    - git push -f heroku HEAD:main
  only:
    - main
    - master

# Security scans
include:
- template: Security/SAST.gitlab-ci.yml
sast:
    rules:
      - if: '$CI_COMMIT_BRANCH == "main"'
